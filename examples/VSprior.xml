<?xml version="1.0" encoding="UTF-8" standalone="no"?><beast namespace="beast.core:beast.evolution.alignment:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood" version="2.0">


    <data id="alignment" name="alignment">
        <sequence id="Sequence.0" taxon="human" totalcount="4" value="?"/>
        <sequence id="Sequence.01" taxon="chimp" totalcount="4" value="?"/>
        <sequence id="Sequence.02" taxon="bonobo" totalcount="4" value="?"/>
        <sequence id="Sequence.03" taxon="gorilla" totalcount="4" value="?"/>
        <sequence id="Sequence.04" taxon="orangutan" totalcount="4" value="?"/>
        <sequence id="Sequence.05" taxon="siamang" totalcount="4" value="?"/>
    </data>


    


    


    
<map name="Beta">beast.math.distributions.Beta</map>
<map name="Exponential">beast.math.distributions.Exponential</map>
<map name="InverseGamma">beast.math.distributions.InverseGamma</map>
<map name="LogNormal">beast.math.distributions.LogNormalDistributionModel</map>
<map name="Prior">beast.math.distributions.Prior</map>
<map name="Gamma">beast.math.distributions.Gamma</map>
<map name="Uniform">beast.math.distributions.Uniform</map>
<map name="LaplaceDistribution">beast.math.distributions.LaplaceDistribution</map>
<map name="OneOnX">beast.math.distributions.OneOnX</map>
<map name="Normal">beast.math.distributions.Normal</map>


<run chainLength="10000000" id="mcmc" spec="MCMC">
    <state id="state" storeEvery="1000">
        <tree id="Tree.t:alignment" name="stateNode">
            <taxonset id="TaxonSet.alignment" spec="TaxonSet">
                <data idref="alignment" name="alignment"/>
            </taxonset>
        </tree>
        <parameter id="birthRate.t:alignment" name="stateNode" value="1.0"/>
        <stateNode id="VScount.s:alignment" lower="0" spec="parameter.IntegerParameter" upper="5" value="5"/>
        <parameter dimension="5" id="VSrates.s:alignment" lower="0.0" name="stateNode" upper="100.0" value="1"/>
    </state>

    <distribution id="posterior" spec="util.CompoundDistribution">
        <distribution id="prior" spec="util.CompoundDistribution">
            <distribution birthDiffRate="@birthRate.t:alignment" id="YuleModel.t:alignment" spec="beast.evolution.speciation.YuleModel" tree="@Tree.t:alignment"/>
            <Prior id="YuleBirthRatePrior.t:alignment" name="distribution" x="@birthRate.t:alignment">
                <Uniform id="Uniform.0" name="distr" upper="Infinity"/>
            </Prior>
            <Prior id="VSprior.s:alignment" name="distribution" x="@VSrates.s:alignment">
                <Gamma id="Gamma.0" name="distr">
                    <parameter id="RealParameter.0" lower="0.0" name="alpha" upper="0.0" value="0.2"/>
                    <parameter id="RealParameter.01" lower="0.0" name="beta" upper="0.0" value="5.0"/>
                </Gamma>
            </Prior>
        </distribution>
        <distribution id="likelihood" spec="util.CompoundDistribution">
            <distribution data="@alignment" id="treeLikelihood.alignment" spec="TreeLikelihood" tree="@Tree.t:alignment">
                <siteModel id="SiteModel.s:alignment" spec="SiteModel">
                    <parameter estimate="false" id="mutationRate.s:alignment" name="mutationRate" value="1.0"/>
                    <parameter estimate="false" id="gammaShape.s:alignment" name="shape" value="1.0"/>
                    <parameter estimate="false" id="proportionInvariant.s:alignment" lower="0.0" name="proportionInvariant" upper="1.0" value="0.0"/>
                    <substModel count="@VScount.s:alignment" id="VS.s:alignment" rates="@VSrates.s:alignment" spec="RB">
                        <frequencies data="@alignment" id="freqs.s:alignment" spec="Frequencies"/>
                    </substModel>
                </siteModel>
                <branchRateModel id="StrictClock.c:alignment" spec="beast.evolution.branchratemodel.StrictClockModel">
                    <parameter estimate="false" id="clockRate.c:alignment" name="clock.rate" value="1.0"/>
                </branchRateModel>
            </distribution>
        </distribution>
    </distribution>

    <operator id="YuleBirthRateScaler.t:alignment" parameter="@birthRate.t:alignment" scaleFactor="0.75" spec="ScaleOperator" weight="3.0"/>

    <operator id="treeScaler.t:alignment" scaleFactor="0.5" spec="ScaleOperator" tree="@Tree.t:alignment" weight="3.0"/>

    <operator id="treeRootScaler.t:alignment" rootOnly="true" scaleFactor="0.5" spec="ScaleOperator" tree="@Tree.t:alignment" weight="3.0"/>

    <operator id="UniformOperator.t:alignment" spec="Uniform" tree="@Tree.t:alignment" weight="30.0"/>

    <operator id="SubtreeSlide.t:alignment" spec="SubtreeSlide" tree="@Tree.t:alignment" weight="15.0"/>

    <operator id="narrow.t:alignment" spec="Exchange" tree="@Tree.t:alignment" weight="15.0"/>

    <operator id="wide.t:alignment" isNarrow="false" spec="Exchange" tree="@Tree.t:alignment" weight="3.0"/>

    <operator id="WilsonBalding.t:alignment" spec="WilsonBalding" tree="@Tree.t:alignment" weight="3.0"/>

    <operator id="VSOperator.s:alignment" parameter="@VScount.s:alignment" spec="IntRandomWalkOperator" weight="1.0" windowSize="1"/>

    <operator id="VSratescaler.s:alignment" parameter="@VSrates.s:alignment" scaleFactor="0.5" spec="ScaleOperator" weight="1.0"/>

    <logger fileName="alignment.$(seed).log" id="tracelog" logEvery="1000" model="@posterior" sanitiseHeaders="true" sort="smart">
        <log idref="posterior"/>
        <log idref="likelihood"/>
        <log idref="prior"/>
        <log idref="treeLikelihood.alignment"/>
        <log id="TreeHeight.t:alignment" spec="beast.evolution.tree.TreeHeightLogger" tree="@Tree.t:alignment"/>
        <log idref="YuleModel.t:alignment"/>
        <parameter idref="birthRate.t:alignment" name="log"/>
        <log idref="VScount.s:alignment"/>
        <parameter idref="VSrates.s:alignment" name="log"/>
    </logger>

    <logger id="screenlog" logEvery="1000">
        <log idref="posterior"/>
        <log arg="@posterior" id="ESS.0" spec="util.ESS"/>
        <log idref="likelihood"/>
        <log idref="prior"/>
    </logger>

    <logger fileName="$(tree).$(seed).trees" id="treelog.t:alignment" logEvery="1000" mode="tree">
        <log id="TreeWithMetaDataLogger.t:alignment" spec="beast.evolution.tree.TreeWithMetaDataLogger" tree="@Tree.t:alignment"/>
    </logger>

    <init estimate="false" id="RandomTree.t:alignment" initial="@Tree.t:alignment" spec="beast.evolution.tree.RandomTree" taxa="@alignment">
        <populationModel id="ConstantPopulation0.t:alignment" spec="ConstantPopulation">
            <parameter id="randomPopSize.t:alignment" name="popSize" value="1"/>
        </populationModel>
    </init>

</run>



<!-- DO NOT EDIT the following machine generated text, they are used in Beauti 



-->

</beast>
