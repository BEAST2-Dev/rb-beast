<?xml version="1.0" encoding="UTF-8" standalone="no"?><beast beautitemplate='Standard' beautistatus='' namespace="beast.core:beast.evolution.alignment:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood" version="2.0">
    

    <mergewith point='substModelTemplates'>
            <!-- site models -->
        <!-- gamma site model -->
        <subtemplate id='BEAST Model Test' class='beast.evolution.sitemodel.BEASTModelTest' mainid='BEASTModelTest.s:$(n)'>
            <![CDATA[

        <stateNode id="BMT_SubstModel.s:$(n)" spec="parameter.IntegerParameter" lower="0" upper="5">5</stateNode>
        <parameter id="BMT_SubstModelRates.s:$(n)" dimension="5" lower="0.01" name="stateNode" upper="100.0">1.0</parameter>
        <parameter id="BMT_gammaShape.s:$(n)" name="stateNode">1.0</parameter>
        <parameter id="BMT_ProportionInvariant.s:$(n)" lower="0.0" name="stateNode" upper="1.0">0.1</parameter>
        <stateNode id="hasInvariantSites.s:$(n)" spec="parameter.IntegerParameter">1</stateNode>        
        <stateNode id="hasGammaRates.s:$(n)" spec="parameter.IntegerParameter">1</stateNode>        


        <distribution id="BMT_RatesPrior.s:$(n)" spec="beast.math.distributions.ModelTestPrior" count="@BMT_SubstModel.s:$(n)" x="@BMT_SubstModelRates.s:$(n)">
		    <Gamma name="distr" alpha="0.2" beta="5.0"/>
        </distribution>
    	<distribution id="BMT_GammaShapePrior.s:$(n)" spec="beast.math.distributions.ModelTestPrior" count="@hasGammaRates.s:$(n)" x="@BMT_gammaShape.s:$(n)">
	    	<Exponential name="distr" mean="1.0"/>
	    </distribution>
    	<distribution id="BMT_PropInvariantPrior.s:$(n)" spec="beast.math.distributions.ModelTestPrior" count="@hasInvariantSites.s:$(n)" x="@BMT_ProportionInvariant.s:$(n)">
	    	<Uniform name="distr" lower="0.0" upper="1.0"/>
    	</distribution>

            
	    <siteModel id="BEASTModelTest.s:$(n)" spec="beast.evolution.sitemodel.BEASTModelTest" 
		    gammaCategoryCount="4" BMT_ProportionInvariant="@BMT_ProportionInvariant.s:$(n)" shape="@BMT_gammaShape.s:$(n)"
		    hasGammaRates="@hasGammaRates.s:$(n)" hasInvariantSites="@hasInvariantSites.s:$(n)">
	        <parameter id="BMT_mutationRate.s:$(n)" estimate="false" name="mutationRate">1.0</parameter>
	        <substModel id="BMT_SubstModel.s:$(n)" spec="ModelTest" count="@BMT_SubstModel.s:$(n)" rates="@BMT_SubstModelRates.s:$(n)">
		    <frequencies id="freqs.s:$(n)" spec="Frequencies" data="@$(n)"/>
	        </substModel>
	    </siteModel>

	    <operator id="BMT_ModelTestOperator.s:$(n)" spec="ModelTestOperator" count="@BMT_SubstModel.s:$(n)" rates="@BMT_SubstModelRates.s:$(n)" weight="1.0"/>
        <operator id="BMT_SubstModelRatescaler.s:$(n)" spec="ModelTestScaleOperator" count="@BMT_SubstModel.s:$(n)" parameter="@BMT_SubstModelRates.s:$(n)" scaleFactor="0.5" weight="1.0"/>
	

	    <operator id="BMT_hasGammaRatesFlipper.s:$(n)" spec="ModelTestOperator" count="@hasGammaRates.s:$(n)" rates="@BMT_gammaShape.s:$(n)" weight="0.1"/>
        <operator id="BMT_gammaShapeScaler.s:$(n)" spec="ModelTestScaleOperator" count="@hasGammaRates.s:$(n)" parameter="@BMT_gammaShape.s:$(n)" scaleFactor="0.5" weight="0.5"/>

	    <operator id="BMT_hasInvariantSitesFlipper.s:$(n)" spec="ModelTestOperator" count="@hasInvariantSites.s:$(n)" rates="@BMT_ProportionInvariant.s:$(n)" weight="0.1"/>
        <operator id="BMT_ProportionInvariantScaler.s:$(n)" spec="ModelTestScaleOperator" count="@hasInvariantSites.s:$(n)" parameter="@BMT_ProportionInvariant.s:$(n)" scaleFactor="0.5" weight="0.5"/>


            ]]>

            <connect method="beast.app.beauti.SiteModelInputEditor.customConnector"/>

            <connect srcID='BMT_SubstModel.s:$(n)'       targetID='state' inputName='stateNode' if='inlikelihood(BEASTModelTest.s:$(n))'/>
            <connect srcID='BMT_SubstModelRates.s:$(n)'       targetID='state' inputName='stateNode' if='inlikelihood(BEASTModelTest.s:$(n)) and BMT_SubstModelRates.s:$(n)/estimate=true'/>
            <connect srcID='BMT_gammaShape.s:$(n)'       targetID='state' inputName='stateNode' if='inlikelihood(BEASTModelTest.s:$(n)) and BMT_gammaShape.s:$(n)/estimate=true'/>
            <connect srcID='BMT_ProportionInvariant.s:$(n)'       targetID='state' inputName='stateNode' if='inlikelihood(BEASTModelTest.s:$(n)) and BMT_ProportionInvariant.s:$(n)/estimate=true'/>
            <connect srcID='hasInvariantSites.s:$(n)'       targetID='state' inputName='stateNode' if='inlikelihood(BEASTModelTest.s:$(n))'/>
            <connect srcID='hasGammaRates.s:$(n)'       targetID='state' inputName='stateNode' if='inlikelihood(BEASTModelTest.s:$(n))'/>
            
            
            <connect srcID='BMT_RatesPrior.s:$(n)'                targetID='prior' inputName='distribution' if='inlikelihood(BEASTModelTest.s:$(n)) and BMT_SubstModelRates.s:$(n)/estimate=true'>Prior on substitution model ratesfor partition s:$(n)</connect>
            <connect srcID='BMT_GammaShapePrior.s:$(n)'           targetID='prior' inputName='distribution' if='inlikelihood(BEASTModelTest.s:$(n)) and BMT_gammaShape.s:$(n)/estimate=true'>Prior on gamma shape parameter for partition s:$(n)</connect>
            <connect srcID='BMT_PropInvariantPrior.s:$(n)'        targetID='prior' inputName='distribution' if='inlikelihood(BEASTModelTest.s:$(n)) and BMT_ProportionInvariant.s:$(n)/estimate=true'>Prior on proportion invariant for partition s:$(n)</connect>

            <connect srcID='BMT_ModelTestOperator.s:$(n)'         targetID='mcmc' inputName='operator' if='inlikelihood(BEASTModelTest.s:$(n))'>Resersible jump of subst models for partition s:$(n)</connect>
            <connect srcID='BMT_SubstModelRatescaler.s:$(n)'      targetID='mcmc' inputName='operator' if='inlikelihood(BEASTModelTest.s:$(n)) and BMT_SubstModelRates.s:$(n)/estimate=true'>Scales subst model rates of partition s:$(n)</connect>
            <connect srcID='BMT_gammaShapeScaler.s:$(n)'          targetID='mcmc' inputName='operator' if='inlikelihood(BEASTModelTest.s:$(n)) and BMT_gammaShape.s:$(n)/estimate=true'>Scales gamma shape parameter of partition s:$(n)</connect>
            <connect srcID='BMT_ProportionInvariantScaler.s:$(n)' targetID='mcmc' inputName='operator' if='inlikelihood(BEASTModelTest.s:$(n)) and BMT_ProportionInvariant.s:$(n)/estimate=true'>Scales proportion invariant of partition s:$(n)</connect>
            <connect srcID='BMT_hasGammaRatesFlipper.s:$(n)'      targetID='mcmc' inputName='operator' if='inlikelihood(BEASTModelTest.s:$(n))'>Switches gamma rates on/off of partition s:$(n)</connect>
            <connect srcID='BMT_hasInvariantSitesFlipper.s:$(n)'  targetID='mcmc' inputName='operator' if='inlikelihood(BEASTModelTest.s:$(n))'>Switches invariant sites on/off of partition s:$(n)</connect>
            
            <connect srcID='BMT_SubstModel.s:$(n)'                targetID='tracelog' inputName='log' if='inlikelihood(BEASTModelTest.s:$(n))'/>
            <connect srcID='BMT_SubstModelRates.s:$(n)'           targetID='tracelog' inputName='log' if='inlikelihood(BEASTModelTest.s:$(n))'/>
            <connect srcID='BMT_gammaShape.s:$(n)'                targetID='tracelog' inputName='log' if='inlikelihood(BEASTModelTest.s:$(n))'/>
            <connect srcID='BMT_ProportionInvariant.s:$(n)'       targetID='tracelog' inputName='log' if='inlikelihood(BEASTModelTest.s:$(n))'/>
            <connect srcID='hasGammaRates.s:$(n)'                 targetID='tracelog' inputName='log' if='inlikelihood(BEASTModelTest.s:$(n))'/>
            <connect srcID='hasInvariantSites.s:$(n)'             targetID='tracelog' inputName='log' if='inlikelihood(BEASTModelTest.s:$(n))'/>

        </subtemplate>
    </mergewith>

</beast>
